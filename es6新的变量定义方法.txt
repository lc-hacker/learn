let: 
    会定义块级作用域；
    不会出现变量提升现象；
    块级作用域的暂时死亡区：在声明之前使用这个变量就会报错（包含typeof）涉及这个变量的操作都会报错
    函数参数也会变成let声明 fn（a, b）注意依赖；
    不允许重复声明；声明方式不同也不可以；在父级子级的作用域可以声明；
    允许在块级作用域内去定义函数；只有在使用大括号的情况下才可以；
    声明的变量不属于全局变量；

const:
    定义的都是一个常量，值不能改变，改变会报错；
    一旦声明就必须要赋值不能不给值；
    const其实就是保证定义变量的内存不被改变就好，基本数据没变法，引用类型的就可以改变但是要是重新改变定义的内存也会爆炸
    其他属性跟let一致


Object.freeze 冻结对象不可以加属性  严格模式会报错
    